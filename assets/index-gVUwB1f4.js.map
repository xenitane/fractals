{"version":3,"file":"index-gVUwB1f4.js","sources":["../../src/lib/utils/svgPathGen.ts","../../src/lib/utils/LinearRenderer.ts"],"sourcesContent":["import { Point } from \"@/types\";\n\nfunction rgbToHex(a: [number, number, number]) {\n\treturn ((1 << 24) | (a[0] << 16) | (a[1] << 8) | a[2]).toString(16).slice(1);\n}\n\ninterface SVGPathLineElementProps {\n\twidth: number;\n\tcolor: [number, number, number];\n\tstart: Point;\n\tend: Point;\n}\n\nexport function createSVGPathLineElement({ width, color, start, end }: SVGPathLineElementProps) {\n\tconst element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\telement.setAttributeNS(null, \"stroke\", `#${rgbToHex(color)}`);\n\telement.setAttributeNS(null, \"stroke-width\", `${width}px`);\n\telement.setAttributeNS(null, \"stroke-linejoin\", \"round\");\n\telement.setAttributeNS(null, \"stroke-linecap\", \"round\");\n\telement.setAttributeNS(null, \"d\", `M ${start[0]} ${start[1]} L ${end[0]} ${end[1]}`);\n\treturn element;\n}\n\ninterface SVGPathPolygonElementProps {\n\tcolor: [number, number, number];\n\tpoints: Point[];\n}\n\nexport function createSVGPathPolygonElement({ color, points }: SVGPathPolygonElementProps) {\n\tconst element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\telement.setAttributeNS(null, \"fill\", `#${rgbToHex(color)}`);\n\telement.setAttributeNS(null, \"stroke-width\", \"0\");\n\telement.setAttributeNS(null, \"stroke-linejoin\", \"round\");\n\telement.setAttributeNS(null, \"stroke-linecap\", \"round\");\n\telement.setAttributeNS(null, \"d\", `M ${points.map((p) => `${p[0]} ${p[1]}`).join(\" L \")} Z`);\n\treturn element;\n}\n\ninterface SVGCircleElementProps {\n\tx: number;\n\ty: number;\n\tr: number;\n\tcolor: [number, number, number];\n}\n\nexport function createSVGCircleElement({ x, y, r, color }: SVGCircleElementProps) {\n\tconst element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n\telement.setAttributeNS(null, \"cx\", `${x}`);\n\telement.setAttributeNS(null, \"cy\", `${y}`);\n\telement.setAttributeNS(null, \"r\", `${r}`);\n\telement.setAttributeNS(null, \"fill\", `#${rgbToHex(color)}`);\n\telement.setAttributeNS(null, \"stroke-width\", \"0\");\n\n\treturn element;\n}\n","import { LinearFractalOptions, Point } from \"@/types\";\nimport { createSVGPathLineElement } from \"@/lib/utils/svgPathGen\";\n\nexport function LinearRenderer(SVGRef: SVGSVGElement, { animate, colored, depth, rules, interval }: LinearFractalOptions) {\n\tlet cursor: Point = [0, 0];\n\tlet direction: Point = [1, 0];\n\tconst points: Point[] = [[0, 0]];\n\tconst bounds: [Point, Point] = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t];\n\n\t(function build(n: number, symbol: string) {\n\t\tif (rules[symbol][0] || n === 0) {\n\t\t\t[cursor, direction] = rules[symbol][1](cursor, direction);\n\t\t\tif (cursor[0] !== points.at(-1)![0] || cursor[1] !== points.at(-1)![1]) points.push(cursor);\n\t\t\tbounds[0][0] = Math.min(bounds[0][0], cursor[0]);\n\t\t\tbounds[0][1] = Math.min(bounds[0][1], cursor[1]);\n\t\t\tbounds[1][0] = Math.max(bounds[1][0], cursor[0]);\n\t\t\tbounds[1][1] = Math.max(bounds[1][1], cursor[1]);\n\t\t} else [...rules[symbol][2]!].forEach((s) => build(n - 1, s));\n\t})(depth, \"I\");\n\tconst origin: Point = [(bounds[1][0] + bounds[0][0]) / 2, (bounds[1][1] + bounds[0][1]) / 2];\n\tconst scale: number = 1800 / Math.max(bounds[1][0] - bounds[0][0], bounds[1][1] - bounds[0][1]);\n\tpoints.forEach((p) => {\n\t\tp[0] = (p[0] - origin[0]) * scale;\n\t\tp[1] = (p[1] - origin[1]) * scale;\n\t});\n\n\tif (colored) {\n\t\t// Todo: fill color\n\t}\n\tif (animate) {\n\t\tlet i = 1;\n\t\tinterval.i = setInterval(() => {\n\t\t\tif (i === points.length) clearInterval(interval.i);\n\t\t\telse {\n\t\t\t\tSVGRef.appendChild(\n\t\t\t\t\tcreateSVGPathLineElement({\n\t\t\t\t\t\twidth: 2,\n\t\t\t\t\t\tcolor: [0, 0, 0],\n\t\t\t\t\t\tstart: points[i - 1],\n\t\t\t\t\t\tend: points[i],\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}, 5);\n\t} else {\n\t\tfor (let i = 1; i < points.length; i++)\n\t\t\tSVGRef.appendChild(\n\t\t\t\tcreateSVGPathLineElement({\n\t\t\t\t\twidth: 2,\n\t\t\t\t\tcolor: [0, 0, 0],\n\t\t\t\t\tstart: points[i - 1],\n\t\t\t\t\tend: points[i],\n\t\t\t\t}),\n\t\t\t);\n\t}\n}\n"],"names":["rgbToHex","a","createSVGPathLineElement","width","color","start","end","element","LinearRenderer","SVGRef","animate","colored","depth","rules","interval","cursor","direction","points","bounds","build","n","symbol","s","origin","scale","p","i"],"mappings":"8IAEA,SAASA,EAASC,EAA6B,CAC9C,OAAS,GAAK,GAAOA,EAAE,CAAC,GAAK,GAAOA,EAAE,CAAC,GAAK,EAAKA,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,MAAM,CAAC,CAC5E,CASO,SAASC,EAAyB,CAAE,MAAAC,EAAO,MAAAC,EAAO,MAAAC,EAAO,IAAAC,GAAgC,CAC/F,MAAMC,EAAU,SAAS,gBAAgB,6BAA8B,MAAM,EAC7E,OAAAA,EAAQ,eAAe,KAAM,SAAU,IAAIP,EAASI,CAAK,CAAC,EAAE,EAC5DG,EAAQ,eAAe,KAAM,eAAgB,GAAGJ,CAAK,IAAI,EACjDI,EAAA,eAAe,KAAM,kBAAmB,OAAO,EAC/CA,EAAA,eAAe,KAAM,iBAAkB,OAAO,EACtDA,EAAQ,eAAe,KAAM,IAAK,KAAKF,EAAM,CAAC,CAAC,IAAIA,EAAM,CAAC,CAAC,MAAMC,EAAI,CAAC,CAAC,IAAIA,EAAI,CAAC,CAAC,EAAE,EAC5EC,CACR,CClBgB,SAAAC,EAAeC,EAAuB,CAAE,QAAAC,EAAS,QAAAC,EAAS,MAAAC,EAAO,MAAAC,EAAO,SAAAC,GAAkC,CACrH,IAAAC,EAAgB,CAAC,EAAG,CAAC,EACrBC,EAAmB,CAAC,EAAG,CAAC,EAC5B,MAAMC,EAAkB,CAAC,CAAC,EAAG,CAAC,CAAC,EACzBC,EAAyB,CAC9B,CAAC,EAAG,CAAC,EACL,CAAC,EAAG,CAAC,CAAA,GAGL,SAASC,EAAMC,EAAWC,EAAgB,CACtCR,EAAMQ,CAAM,EAAE,CAAC,GAAKD,IAAM,GAC5B,CAAAL,EAAQC,CAAS,EAAIH,EAAMQ,CAAM,EAAE,CAAC,EAAEN,EAAQC,CAAS,GACpDD,EAAO,CAAC,IAAME,EAAO,GAAG,EAAE,EAAG,CAAC,GAAKF,EAAO,CAAC,IAAME,EAAO,GAAG,EAAE,EAAG,CAAC,IAAGA,EAAO,KAAKF,CAAM,EAC1FG,EAAO,CAAC,EAAE,CAAC,EAAI,KAAK,IAAIA,EAAO,CAAC,EAAE,CAAC,EAAGH,EAAO,CAAC,CAAC,EAC/CG,EAAO,CAAC,EAAE,CAAC,EAAI,KAAK,IAAIA,EAAO,CAAC,EAAE,CAAC,EAAGH,EAAO,CAAC,CAAC,EAC/CG,EAAO,CAAC,EAAE,CAAC,EAAI,KAAK,IAAIA,EAAO,CAAC,EAAE,CAAC,EAAGH,EAAO,CAAC,CAAC,EAC/CG,EAAO,CAAC,EAAE,CAAC,EAAI,KAAK,IAAIA,EAAO,CAAC,EAAE,CAAC,EAAGH,EAAO,CAAC,CAAC,GACzC,CAAC,GAAGF,EAAMQ,CAAM,EAAE,CAAC,CAAE,EAAE,QAASC,GAAMH,EAAMC,EAAI,EAAGE,CAAC,CAAC,CAAA,GAC1DV,EAAO,GAAG,EACP,MAAAW,EAAgB,EAAEL,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,GAAK,GAAIA,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,GAAK,CAAC,EACrFM,EAAgB,KAAO,KAAK,IAAIN,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,EAAGA,EAAO,CAAC,EAAE,CAAC,EAAIA,EAAO,CAAC,EAAE,CAAC,CAAC,EAS9F,GAROD,EAAA,QAASQ,GAAM,CACrBA,EAAE,CAAC,GAAKA,EAAE,CAAC,EAAIF,EAAO,CAAC,GAAKC,EAC5BC,EAAE,CAAC,GAAKA,EAAE,CAAC,EAAIF,EAAO,CAAC,GAAKC,CAAA,CAC5B,EAKGd,EAAS,CACZ,IAAIgB,EAAI,EACCZ,EAAA,EAAI,YAAY,IAAM,CAC1BY,IAAMT,EAAO,OAAQ,cAAcH,EAAS,CAAC,GAEzCL,EAAA,YACNP,EAAyB,CACxB,MAAO,EACP,MAAO,CAAC,EAAG,EAAG,CAAC,EACf,MAAOe,EAAOS,EAAI,CAAC,EACnB,IAAKT,EAAOS,CAAC,CAAA,CACb,CAAA,EAEFA,MAEC,CAAC,CAAA,KAEJ,SAASA,EAAI,EAAGA,EAAIT,EAAO,OAAQS,IAC3BjB,EAAA,YACNP,EAAyB,CACxB,MAAO,EACP,MAAO,CAAC,EAAG,EAAG,CAAC,EACf,MAAOe,EAAOS,EAAI,CAAC,EACnB,IAAKT,EAAOS,CAAC,CAAA,CACb,CAAA,CAGL"}