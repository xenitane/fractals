{"version":3,"file":"fracUtils-EuSe4TLi.js","sources":["../../src/lib/utils/fracUtils.ts"],"sourcesContent":["import { type LinearOperator, type Point } from \"@/types\";\nimport { add, rotate } from \"@/lib/utils\";\n\nexport const doNothing: LinearOperator = (p, f) => [p, f];\nexport const moveForward: LinearOperator = (p, f) => [add(p, f), f];\nexport const left45: LinearOperator = (p, f) => [p, rotate(f, Math.PI / 4)];\nexport const left60: LinearOperator = (p, f) => [p, rotate(f, Math.PI / 3)];\nexport const left90: LinearOperator = (p, f) => [p, rotate(f, Math.PI / 2)];\nexport const left120: LinearOperator = (p, f) => [p, rotate(f, (2 * Math.PI) / 3)];\nexport const right45: LinearOperator = (p, f) => [p, rotate(f, -Math.PI / 4)];\nexport const right60: LinearOperator = (p, f) => [p, rotate(f, -Math.PI / 3)];\nexport const right90: LinearOperator = (p, f) => [p, rotate(f, -Math.PI / 2)];\nexport const right120: LinearOperator = (p, f) => [p, rotate(f, (2 * -Math.PI) / 3)];\n\nexport function genCentersV(centers: Point[], sides: number, i_rad: number, shift = 0) {\n\tconst newCenters = [];\n\tfor (const center of centers) {\n\t\tlet dir = rotate([0, -i_rad], shift);\n\t\tfor (let j = 0; j < sides; j++) {\n\t\t\tnewCenters.push(add(center, dir));\n\t\t\tdir = rotate(dir, (2 * Math.PI) / sides);\n\t\t}\n\t}\n\treturn newCenters;\n}\n\nexport function genCentersVC(\n\tcenters: Point[],\n\tinvCenters: Point[],\n\tsides: number,\n\ti_rad: number,\n\tshift = 0\n): [Point[], Point[]] {\n\tconst newCenters = [];\n\tconst newInvCenters = [];\n\tfor (const center of centers) {\n\t\tnewInvCenters.push(center);\n\t\tlet dir = rotate([0, -i_rad], shift);\n\t\tfor (let j = 0; j < sides; j++) {\n\t\t\tnewCenters.push(add(center, dir));\n\t\t\tdir = rotate(dir, (2 * Math.PI) / sides);\n\t\t}\n\t}\n\tfor (const invCenter of invCenters) {\n\t\tnewCenters.push(invCenter);\n\t\tlet dir = rotate([0, i_rad], shift);\n\t\tfor (let j = 0; j < sides; j++) {\n\t\t\tnewInvCenters.push(add(invCenter, dir));\n\t\t\tdir = rotate(dir, (2 * Math.PI) / sides);\n\t\t}\n\t}\n\n\treturn [newCenters, newInvCenters];\n}\n\nexport function genCentersVS(centers: Point[], sides: number, i_rad: [number, number]) {\n\tconst newCenters = [];\n\tfor (const center of centers) {\n\t\tlet dir_0 = rotate([0, -i_rad[0]], -Math.PI / sides);\n\t\tlet dir_1 = rotate([0, -i_rad[1]], 0);\n\t\tfor (let j = 0; j < sides; j++) {\n\t\t\tnewCenters.push(add(center, dir_0));\n\t\t\tnewCenters.push(add(center, dir_1));\n\t\t\tdir_1 = rotate(dir_1, (2 * Math.PI) / sides);\n\t\t\tdir_0 = rotate(dir_0, (2 * Math.PI) / sides);\n\t\t}\n\t}\n\treturn newCenters;\n}\n\nexport function polyVGen(center: Point, sides: number, o_rad: number, shift = 0) {\n\tconst vertices = [];\n\tlet dir = rotate([0, -o_rad], shift);\n\tfor (let i = 0; i < sides; i++) {\n\t\tvertices.push(add(center, dir));\n\t\tdir = rotate(dir, (2 * Math.PI) / sides);\n\t}\n\treturn vertices;\n}\n"],"names":["doNothing","p","f","moveForward","add","left45","rotate","left60","left90","left120","right45","right60","right90","right120","genCentersV","centers","sides","i_rad","shift","newCenters","center","dir","j","genCentersVC","invCenters","newInvCenters","invCenter","genCentersVS","dir_0","dir_1","polyVGen","o_rad","vertices","i"],"mappings":"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"}