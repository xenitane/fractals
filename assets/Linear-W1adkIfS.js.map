{"version":3,"file":"Linear-W1adkIfS.js","sources":["../../src/lib/utils/complex.ts","../../src/lib/rules/Linear.ts"],"sourcesContent":["import { Point } from \"@/types\";\n\nexport function multiply(a: Point, b: Point): Point {\n\tconst x = Math.round(1000000 * (a[0] * b[0] - a[1] * b[1])) / 1000000;\n\tconst y = Math.round(1000000 * (a[0] * b[1] + a[1] * b[0])) / 1000000;\n\treturn [x, y];\n}\n\nexport function add(a: Point, b: Point): Point {\n\treturn [a[0] + b[0], a[1] + b[1]];\n}\nexport function subtract(a: Point, b: Point): Point {\n\treturn [a[0] - b[0], a[1] - b[1]];\n}\n\nexport function real(a: Point) {\n\treturn a[0];\n}\nexport function imag(a: Point) {\n\treturn a[1];\n}\n\nexport function mod(a: Point) {\n\treturn Math.sqrt(a[0] * a[0] + a[1] * a[1]);\n}\n\nexport function arg(a: Point) {\n\tif (a[0] === 0) return (Math.PI * Math.sign(a[1])) / 2;\n\tlet angle = Math.atan(a[1] / a[0]);\n\tif (a[0] > 0) return angle;\n\tangle -= Math.PI;\n\treturn Math.sign(-a[1]) * angle;\n}\n\nexport function compliment(a: Point): Point {\n\treturn [a[0], -a[1]];\n}\n\nexport function divide(a: Point, b: Point): Point {\n\tconst modb = Math.pow(mod(b), 2);\n\tif (modb === 0) throw new Error(\"division by zero not possible.\");\n\telse {\n\t\tconst [x, y] = multiply(a, compliment(b));\n\t\treturn [x / modb, y / modb];\n\t}\n}\n\nexport function rotate(v: Point, angle: number) {\n\treturn multiply(v, [Math.cos(angle), Math.sin(angle)]);\n}\n","import { LinearFractalInfo, LinearOperator } from \"@/types\";\nimport Levy from \"@/assets/Levy\";\nimport { add, rotate } from \"@/lib/utils/complex\";\n\nconst doNothing: LinearOperator = (p, f) => [p, f];\nconst moveForward: LinearOperator = (p, f) => [add(p, f), f];\nconst left45: LinearOperator = (p, f) => [p, rotate(f, Math.PI / 4)];\nconst left60: LinearOperator = (p, f) => [p, rotate(f, Math.PI / 3)];\nconst left90: LinearOperator = (p, f) => [p, rotate(f, Math.PI / 2)];\nconst right45: LinearOperator = (p, f) => [p, rotate(f, -Math.PI / 4)];\nconst right60: LinearOperator = (p, f) => [p, rotate(f, -Math.PI / 3)];\nconst right90: LinearOperator = (p, f) => [p, rotate(f, -Math.PI / 2)];\n\n// todo: add fractal thumbnails\n\nconst LevyCCurveRules: LinearFractalInfo = {\n\tname: \"Levy C Curve\",\n\tImage: Levy,\n\tmaxDepth: 15,\n\trules: () => {\n\t\treturn {\n\t\t\trules: {\n\t\t\t\tI: [false, doNothing, \"A\"],\n\t\t\t\tA: [false, moveForward, \"FPPG\"],\n\t\t\t\tF: [false, moveForward, \"FPPHN\"],\n\t\t\t\tG: [false, moveForward, \"NHPPG\"],\n\t\t\t\tH: [false, moveForward, \"NHPPHN\"],\n\t\t\t\tP: [true, right45],\n\t\t\t\tN: [true, left45],\n\t\t\t},\n\t\t\tshift: 1,\n\t\t};\n\t},\n};\n\nconst DragonCurveRules: LinearFractalInfo = {\n\tname: \"Dragon Curve\",\n\tmaxDepth: 15,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"F\"],\n\t\t\tF: [false, moveForward, \"FPH\"],\n\t\t\tH: [false, moveForward, \"FNH\"],\n\t\t\tP: [true, right90],\n\t\t\tN: [true, left90],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst GosperCurveRules: LinearFractalInfo = {\n\tname: \"Gosper Curve\",\n\tmaxDepth: 5,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, moveForward, \"F\"],\n\t\t\tF: [false, moveForward, \"FNHNNHPFPPFFPHN\"],\n\t\t\tH: [false, moveForward, \"PFNHHNNHNFPPFPH\"],\n\t\t\tP: [true, right60],\n\t\t\tN: [true, left60],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst KochSnowflakeRules: LinearFractalInfo = {\n\tname: \"Koch Snowflake\",\n\tmaxDepth: 5,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"FNNFNNF\"],\n\t\t\tF: [false, moveForward, \"FPFNNFPF\"],\n\t\t\tP: [true, right60],\n\t\t\tN: [true, left60],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst KochAntiSnowflakeRules: LinearFractalInfo = {\n\tname: \"Koch Anti Snowflake\",\n\tmaxDepth: 5,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"FNNFNNF\"],\n\t\t\tF: [false, moveForward, \"FNFPPFNF\"],\n\t\t\tP: [true, right60],\n\t\t\tN: [true, left60],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst MinkowskiSausageRules: LinearFractalInfo = {\n\tname: \"Minkowski Sausage\",\n\tmaxDepth: 3,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"FNFNFNF\"],\n\t\t\tF: [false, moveForward, \"FPFNFNFFPFPFNF\"],\n\t\t\tP: [true, right90],\n\t\t\tN: [true, left90],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst HilbertCurveRules: LinearFractalInfo = {\n\tname: \"Hilbert Curve\",\n\tmaxDepth: 6,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"A\"],\n\t\t\tA: [false, doNothing, \"PBFNAFANFBP\"],\n\t\t\tB: [false, doNothing, \"NAFPBFBPFAN\"],\n\t\t\tF: [true, moveForward],\n\t\t\tP: [true, right90],\n\t\t\tN: [true, left90],\n\t\t},\n\t\tshift: 2,\n\t}),\n};\n\nconst PeanoCurveRules: LinearFractalInfo = {\n\tname: \"Peano Curve\",\n\tmaxDepth: 5,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"RF\"],\n\t\t\tF: [false, moveForward, \"FPFNFNFNFPFPFPFNF\"],\n\t\t\tR: [true, right45],\n\t\t\tP: [true, right90],\n\t\t\tN: [true, left90],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst TSquare: LinearFractalInfo = {\n\tname: \"T Square\",\n\tmaxDepth: 5,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"FPFPFPF\"],\n\t\t\tF: [false, moveForward, \"FPFNFNFPF\"],\n\t\t\tP: [true, right90],\n\t\t\tN: [true, left90],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst AntiTSquare: LinearFractalInfo = {\n\tname: \"Anti T Square\",\n\tmaxDepth: 4,\n\trules: () => ({\n\t\trules: {\n\t\t\tI: [false, doNothing, \"FPFPFPF\"],\n\t\t\tF: [false, moveForward, \"FNFPFPFNF\"],\n\t\t\tP: [true, right90],\n\t\t\tN: [true, left90],\n\t\t},\n\t\tshift: 1,\n\t}),\n};\n\nconst FibonacciWordFractal: LinearFractalInfo = {\n\tname: \"Fibonacci Word Fractal\",\n\tmaxDepth: 20,\n\trules: () => {\n\t\tlet i = false;\n\t\treturn {\n\t\t\tshift: 1,\n\t\t\trules: {\n\t\t\t\tI: [false, doNothing, \"F\"],\n\t\t\t\tF: [\n\t\t\t\t\tfalse,\n\t\t\t\t\t(p, f) => {\n\t\t\t\t\t\ti = !i;\n\t\t\t\t\t\treturn moveForward(p, f);\n\t\t\t\t\t},\n\t\t\t\t\t\"H\",\n\t\t\t\t],\n\t\t\t\tH: [\n\t\t\t\t\tfalse,\n\t\t\t\t\t(p, f) => {\n\t\t\t\t\t\ti = !i;\n\t\t\t\t\t\treturn moveForward(...(i ? right90(p, f) : left90(p, f)));\n\t\t\t\t\t},\n\t\t\t\t\t\"HF\",\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t},\n};\n\nconst LinearFractalRulesSet: Record<string, LinearFractalInfo> = {\n\t\"levy-c-curve\": LevyCCurveRules,\n\t\"dragon-curve\": DragonCurveRules,\n\t\"gosper-curve\": GosperCurveRules,\n\t\"koch-snowflake\": KochSnowflakeRules,\n\t\"koch-anti-snowflake\": KochAntiSnowflakeRules,\n\t\"minkowski-sausage\": MinkowskiSausageRules,\n\t\"hilbert-curve\": HilbertCurveRules,\n\t\"peano-curve\": PeanoCurveRules,\n\t\"t-square\": TSquare,\n\t\"anti-t-square\": AntiTSquare,\n\t\"fibonacci-word-fractal\": FibonacciWordFractal,\n};\n\nexport default LinearFractalRulesSet;\n"],"names":["multiply","a","b","x","y","add","rotate","v","angle","doNothing","p","f","moveForward","left45","left60","left90","right45","right60","right90","LevyCCurveRules","Levy","DragonCurveRules","GosperCurveRules","KochSnowflakeRules","KochAntiSnowflakeRules","MinkowskiSausageRules","HilbertCurveRules","PeanoCurveRules","TSquare","AntiTSquare","FibonacciWordFractal","i","LinearFractalRulesSet"],"mappings":"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"}