{"version":3,"file":"BranchingFrac-UQ1ikalq.js","sources":["../../src/lib/utils/renderer/Branching.ts","../../src/pages/BranchingFrac.tsx"],"sourcesContent":["import { ArrayOfTAndSelf, BranchingFractalOptions, Point } from \"@/types\";\nimport { createSVGPathLineElement, rounder } from \"@/lib/utils\";\nexport function BranchingRenderer(\n\tSVGRef: SVGSVGElement,\n\t{ order, animate, colored, interval, FractalInfo }: BranchingFractalOptions\n) {\n\t// console.log(SVGRef, depth, animate, colored, interval, FractalInfo);\n\tlet cursor: Point = [0, 0];\n\tlet direction: Point = [1, 0];\n\tconst paths: [Point, Point][] = [];\n\tconst bounds: [Point, Point] = [\n\t\t[0, 0],\n\t\t[0, 0],\n\t];\n\n\tfunction handleBranchNode(crsr: Point, dirn: Point, d: number, branchInfo: ArrayOfTAndSelf<string>): [Point, Point] {\n\t\tif (typeof branchInfo === \"string\") {\n\t\t\tfor (const ins of [...branchInfo]) {\n\t\t\t\t[crsr, dirn] = handleInstruction(crsr, dirn, ins, d);\n\t\t\t}\n\t\t\treturn [crsr, dirn];\n\t\t} else {\n\t\t\tfor (const ins of [...branchInfo[0]]) {\n\t\t\t\t[crsr, dirn] = handleInstruction(crsr, dirn, ins, d);\n\t\t\t}\n\t\t\tlet tc: Point = [crsr[0], crsr[1]];\n\t\t\tlet td: Point = [dirn[0], dirn[1]];\n\t\t\tfor (const branch of branchInfo[1]) {\n\t\t\t\ttc = [crsr[0], crsr[1]];\n\t\t\t\ttd = [dirn[0], dirn[1]];\n\t\t\t\t[tc, td] = handleBranchNode(tc, td, d, branch);\n\t\t\t}\n\t\t\treturn FractalInfo.stay ? [crsr, dirn] : [tc, td];\n\t\t}\n\t}\n\n\tfunction handleInstruction(crsr: Point, dirn: Point, ins: string, d: number): [Point, Point] {\n\t\tif (d === 0 || FractalInfo.rules[ins][0]) {\n\t\t\tconst [newCrsr, newDir, feed] = FractalInfo.rules[ins][1](crsr, dirn);\n\t\t\tif (feed && (newCrsr[0] !== crsr[0] || newCrsr[1] !== crsr[1])) {\n\t\t\t\tpaths.push([\n\t\t\t\t\t[crsr[0], crsr[1]],\n\t\t\t\t\t[newCrsr[0], newCrsr[1]],\n\t\t\t\t]);\n\t\t\t\tbounds[0][0] = Math.min(bounds[0][0], newCrsr[0]);\n\t\t\t\tbounds[0][1] = Math.min(bounds[0][1], newCrsr[1]);\n\t\t\t\tbounds[1][0] = Math.max(bounds[1][0], newCrsr[0]);\n\t\t\t\tbounds[1][1] = Math.max(bounds[1][1], newCrsr[1]);\n\t\t\t}\n\t\t\treturn [newCrsr, newDir];\n\t\t}\n\t\treturn handleBranchNode(crsr, dirn, d - 1, FractalInfo.rules[ins][2]!);\n\t}\n\n\t[cursor, direction] = handleInstruction(cursor, direction, \"I\", order + FractalInfo.shift);\n\n\tconst origin: Point = [(bounds[1][0] + bounds[0][0]) / 2, (bounds[1][1] + bounds[0][1]) / 2];\n\tconst scale: number = 1800 / Math.max(bounds[1][0] - bounds[0][0], bounds[1][1] - bounds[0][1]);\n\tfor (const path of paths) {\n\t\tpath[0][0] = rounder((path[0][0] - origin[0]) * scale);\n\t\tpath[0][1] = rounder((path[0][1] - origin[1]) * scale);\n\t\tpath[1][0] = rounder((path[1][0] - origin[0]) * scale);\n\t\tpath[1][1] = rounder((path[1][1] - origin[1]) * scale);\n\t}\n\n\tif (colored) {\n\t\t// todo : fill color\n\t}\n\tif (animate) {\n\t\tlet i = 0;\n\t\tinterval.i = setInterval(() => {\n\t\t\tif (i === paths.length) {\n\t\t\t\tclearInterval(interval.i);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tSVGRef.appendChild(\n\t\t\t\tcreateSVGPathLineElement({\n\t\t\t\t\tcolor: [0, 0, 0],\n\t\t\t\t\tstart: paths[i][0],\n\t\t\t\t\tend: paths[i][1],\n\t\t\t\t})\n\t\t\t);\n\t\t\ti++;\n\t\t}, 5);\n\t} else {\n\t\tfor (const path of paths) {\n\t\t\tSVGRef.appendChild(\n\t\t\t\tcreateSVGPathLineElement({\n\t\t\t\t\tcolor: [0, 0, 0],\n\t\t\t\t\tstart: path[0],\n\t\t\t\t\tend: path[1],\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n","import { useRef } from \"react\";\nimport { BranchingRenderer, cn } from \"@/lib/utils\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport FractalForm, { formSchema } from \"@/components/FractalForm\";\nimport BranchingFractalRuleSet from \"@/lib/rules/Branching\";\nimport SVGCanvas from \"@/components/SVGCanvas\";\n\nconst FillFrac = () => {\n\tconst { fracID } = useParams();\n\tconst SVGRef = useRef<SVGSVGElement>(null);\n\n\tif (!(fracID! in BranchingFractalRuleSet)) return <Navigate to=\"/geo-vis/404\" />;\n\n\tconst interval: { i?: NodeJS.Timeout } = { i: undefined };\n\n\tlet FractalInfo = BranchingFractalRuleSet[fracID!].rules();\n\n\tfunction SVGReset() {\n\t\tFractalInfo = BranchingFractalRuleSet[fracID!].rules();\n\t\tSVGRef.current!.innerHTML = \"\";\n\t\tclearInterval(interval.i);\n\t\tinterval.i = undefined;\n\t}\n\n\tfunction handleSubmit(data: formSchema) {\n\t\tSVGReset();\n\t\tBranchingRenderer(SVGRef.current!, {\n\t\t\t...data,\n\t\t\tinterval,\n\t\t\tFractalInfo,\n\t\t});\n\t}\n\n\tfunction handleSave() {\n\t\t// console.log(SVGRef.current);\n\t}\n\n\treturn (\n\t\t<article className={cn(\"flex w-full flex-col gap-8 py-2\", \"lg:flex-row\")}>\n\t\t\t<div className={cn(\"flex w-full flex-col\", \"lg:w-1/3\")}>\n\t\t\t\t<h3 className={cn(\"pb-4 text-2xl underline\", \"lg:text-3xl\")}>{BranchingFractalRuleSet[fracID!].name}</h3>\n\t\t\t\t<FractalForm\n\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\tSVGReset={SVGReset}\n\t\t\t\t\tmaxOrder={BranchingFractalRuleSet[fracID!].maxOrder}\n\t\t\t\t\thandleSave={handleSave}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={cn(\"flex justify-center\", \"lg:w-2/3\")}>\n\t\t\t\t<div className={cn(\"aspect-square w-full rounded-xl bg-slate-200\", \"lg:w-[80vh]\")}>\n\t\t\t\t\t<SVGCanvas ref={SVGRef} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default FillFrac;\n"],"names":["BranchingRenderer","SVGRef","order","animate","colored","interval","FractalInfo","cursor","direction","paths","bounds","handleBranchNode","crsr","dirn","d","branchInfo","ins","handleInstruction","tc","td","branch","newCrsr","newDir","feed","origin","scale","path","rounder","i","createSVGPathLineElement","FillFrac","fracID","useParams","useRef","BranchingFractalRuleSet","jsx","Navigate","SVGReset","handleSubmit","data","handleSave","cn","jsxs","FractalForm","SVGCanvas"],"mappings":"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"}