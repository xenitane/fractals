{"version":3,"file":"Fill-lci7RbSe.js","sources":["../../src/assets/Thumbnails/fill/sierpinski-triangle.svg","../../src/assets/Thumbnails/fill/sierpinski-pentagon.svg","../../src/assets/Thumbnails/fill/sierpinski-hexagon.svg","../../src/assets/Thumbnails/fill/pentaflake.svg","../../src/assets/Thumbnails/fill/hexaflake.svg","../../src/assets/Thumbnails/fill/hexnut.svg","../../src/assets/Thumbnails/fill/hexpool.svg","../../src/assets/Thumbnails/fill/sierpinski-carpet.svg","../../src/assets/Thumbnails/fill/vicsek-fractal.svg","../../src/lib/rules/Fill.ts"],"sourcesContent":["export default \"__VITE_ASSET__xddMAoxy__\"","export default \"__VITE_ASSET__R4iREAbN__\"","export default \"__VITE_ASSET__RR8wz1Yt__\"","export default \"__VITE_ASSET__4NFKtt18__\"","export default \"__VITE_ASSET__tHCUX_oq__\"","export default \"__VITE_ASSET__cy_itHIy__\"","export default \"__VITE_ASSET__qmMk9TlB__\"","export default \"__VITE_ASSET__YHASvRUp__\"","export default \"__VITE_ASSET__BA7EYxyV__\"","import {\n\thexaflake,\n\thexnut,\n\thexpool,\n\tpentaflake,\n\tsierpinskiCarpet,\n\tsierpinskiHexagon,\n\tsierpinskiPentagon,\n\tsierpinskiTriangle,\n\tvicsekFractal,\n} from \"@/assets/Thumbnails/fill\";\nimport { FillFractalInfo, Point } from \"@/types\";\n\nimport { genCentersV, genCentersVC, genCentersVS, polyVGen } from \"@/lib/utils\";\n\nconst SierpinskiTriangle: FillFractalInfo = {\n\tname: \"Sierpinski Triangle\",\n\timage: sierpinskiTriangle,\n\tmaxDepth: 7,\n\trules: () => {\n\t\tconst sides = 3;\n\t\tconst ratio = 1 / 2;\n\t\tconst o_rad = 900 / Math.sin((2 * Math.PI) / 3);\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, sides, o_rad * Math.pow(ratio, d)),\n\t\t};\n\t},\n};\nconst SierpinskiPentagon: FillFractalInfo = {\n\tname: \"Sierpinski Pentagon\",\n\timage: sierpinskiPentagon,\n\tmaxDepth: 5,\n\trules: () => {\n\t\tconst sides = 5;\n\t\tconst ratio = 1 / (1 + 2 * Math.cos(Math.PI / sides));\n\t\tconst o_rad = 900 / Math.sin((2 * Math.PI) / sides);\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, sides, o_rad * Math.pow(ratio, d)),\n\t\t};\n\t},\n};\nconst SierpinskiHexagon: FillFractalInfo = {\n\tname: \"Sierpinski Hexagon\",\n\timage: sierpinskiHexagon,\n\tmaxDepth: 5,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, sides, o_rad * Math.pow(ratio, d)),\n\t\t};\n\t},\n};\nconst PentaFlake: FillFractalInfo = {\n\tname: \"Pentaflake\",\n\timage: pentaflake,\n\tmaxDepth: 5,\n\trules: () => {\n\t\tconst sides = 5;\n\t\tconst ratio = 1 / (1 + 2 * Math.cos(Math.PI / sides));\n\t\tconst o_rad = 900 / Math.sin((2 * Math.PI) / sides);\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers: Point[], invCenters: Point[]) => {\n\t\t\t\tconst allCenters = genCentersVC(centers, invCenters, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allCenters;\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\nconst HexaFlake: FillFractalInfo = {\n\tname: \"Hexaflake\",\n\timage: hexaflake,\n\tmaxDepth: 5,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers: Point[], invCenters: Point[]) => {\n\t\t\t\tconst allCenters = genCentersVC(centers, invCenters, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allCenters;\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\nconst HexNut: FillFractalInfo = {\n\tname: \"Hex Nut\",\n\tmaxDepth: 5,\n\timage: hexnut,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio) * Math.cos(Math.PI / 6);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad, Math.PI / 6);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\n\nconst HexPool: FillFractalInfo = {\n\tname: \"Hex Pool\",\n\tmaxDepth: 5,\n\timage: hexpool,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio) * Math.cos(Math.PI / 6);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst allcenters = genCentersVC(centers, invCenters, sides, i_rad, Math.PI / 6);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allcenters;\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\n\nconst SierpinskiCarpet: FillFractalInfo = {\n\tname: \"Sierpinski Carpet\",\n\tmaxDepth: 5,\n\timage: sierpinskiCarpet,\n\trules: () => {\n\t\tconst o_rad = 900 * Math.sqrt(2);\n\t\tconst ratio = 1 / 3;\n\t\tconst sides = 4;\n\t\tlet i_rad: [number, number] = [o_rad * (1 - ratio), (o_rad * (1 - ratio)) / Math.sqrt(2)];\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, 4, o_rad * Math.pow(ratio, d), Math.PI / 4),\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersVS(centers, sides, i_rad);\n\t\t\t\ti_rad[0] *= ratio;\n\t\t\t\ti_rad[1] *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t};\n\t},\n};\n\nconst VicsekFractal: FillFractalInfo = {\n\tname: \"VicSek Fractal\",\n\tmaxDepth: 6,\n\timage: vicsekFractal,\n\trules: () => {\n\t\tconst o_rad = 900 * Math.sqrt(2);\n\t\tconst ratio = 1 / 3;\n\t\tconst sides = 4;\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, 4, o_rad * Math.pow(ratio, d), Math.PI / 4),\n\t\t\trules: (centers, invCenter) => {\n\t\t\t\tconst allCenters = genCentersVC(centers, invCenter, sides, i_rad, Math.PI / 4);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allCenters;\n\t\t\t},\n\t\t};\n\t},\n};\n\nconst FillFractalRuleSet: Record<string, FillFractalInfo> = {\n\t\"sierpinski-triangle\": SierpinskiTriangle,\n\t\"sierpinski-pentagon\": SierpinskiPentagon,\n\t\"penta-flake\": PentaFlake,\n\t\"sierpinski-hexagon\": SierpinskiHexagon,\n\t\"hexa-flake\": HexaFlake,\n\t\"hex-nut\": HexNut,\n\t\"hex-pool\": HexPool,\n\t\"sierpinski-carpet\": SierpinskiCarpet,\n\t\"vicsek-fractal\": VicsekFractal,\n};\n\nexport default FillFractalRuleSet;\n"],"names":["sierpinskiTriangle","sierpinskiPentagon","sierpinskiHexagon","pentaflake","hexaflake","hexnut","hexpool","sierpinskiCarpet","vicsekFractal","SierpinskiTriangle","o_rad","i_rad","centers","invCenters","newCenters","genCentersV","d","c","polyVGen","SierpinskiPentagon","ratio","SierpinskiHexagon","PentaFlake","allCenters","genCentersVC","flip","HexaFlake","HexNut","HexPool","allcenters","SierpinskiCarpet","sides","genCentersVS","VicsekFractal","invCenter","FillFractalRuleSet"],"mappings":"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"}