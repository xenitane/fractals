{"version":3,"file":"Attractor-kp_2mqZn.js","sources":["../../src/lib/utils/renderer/Attractor.ts","../../src/components/AttractorForm.tsx","../../src/pages/Attractor.tsx"],"sourcesContent":["import { AttractorOptions, Point } from \"@/types\";\nimport { add, createSVGCircleElement, multiply } from \"@/lib/utils\";\n\nexport function AttractorRenderer(SVGRef: SVGSVGElement, { order, animate, AttractorInfo, interval }: AttractorOptions) {\n\tconst cap = Math.pow(10, order);\n\tconst scale = AttractorInfo.scale;\n\tconst shift = AttractorInfo.shift;\n\tconst or_qty = AttractorInfo.origins.length;\n\n\tif (animate) {\n\t\tconst points: Point[][] = Array.from({ length: or_qty }, (_, j) =>\n\t\t\tArray.from({ length: cap }, () => {\n\t\t\t\treturn [AttractorInfo.origins[j][0], AttractorInfo.origins[j][1]];\n\t\t\t})\n\t\t);\n\t\tconst pointSvgs: SVGCircleElement[][] = points.map((parr) =>\n\t\t\tparr.map((p) => {\n\t\t\t\tconst [x, y] = multiply(add(p, shift), scale);\n\t\t\t\tconst elm = createSVGCircleElement({\n\t\t\t\t\tx,\n\t\t\t\t\ty: -y,\n\t\t\t\t\tcolor: [0, 0, 0],\n\t\t\t\t});\n\t\t\t\tSVGRef.appendChild(elm);\n\t\t\t\treturn elm;\n\t\t\t})\n\t\t);\n\n\t\tlet i = 0;\n\t\tinterval.i = setInterval(() => {\n\t\t\tfor (let j = 0; j < or_qty; j++) points[j][(i + 1) % cap] = AttractorInfo.rules(points[j][i]);\n\t\t\ti = (i + 1) % cap;\n\t\t\tfor (let j = 0; j < or_qty; j++) {\n\t\t\t\tconst [x, y] = multiply(add(points[j][i], shift), scale);\n\t\t\t\tif (isNaN(x) || isNaN(y)) {\n\t\t\t\t\tthrow new Error(\"wtf\");\n\t\t\t\t}\n\t\t\t\tpointSvgs[j][i].setAttributeNS(null, \"cx\", `${x}`);\n\t\t\t\tpointSvgs[j][i].setAttributeNS(null, \"cy\", `${-y}`);\n\t\t\t}\n\t\t}, 1);\n\t} else {\n\t\tconst origins = AttractorInfo.origins;\n\t\tfor (let i = 0; i < Math.pow(10, order); i++) {\n\t\t\tfor (let j = 0; j < or_qty; j++) {\n\t\t\t\tconst [x, y] = multiply(add(origins[j], shift), scale);\n\t\t\t\tif (isNaN(x) || isNaN(y)) {\n\t\t\t\t\tthrow new Error(\"wtf\");\n\t\t\t\t}\n\t\t\t\tSVGRef.appendChild(createSVGCircleElement({ x, y: -y, color: [0, 0, 0] }));\n\t\t\t\torigins[j] = AttractorInfo.rules(origins[j]);\n\t\t\t}\n\t\t}\n\t}\n}\n","import z from \"zod\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Separator } from \"@/components/ui/separator\";\n\nfunction schemaMaker(maxOrder: number, symbols: [string, number][]) {\n\tconst zodOb: {\n\t\t[key: string]: z.ZodTypeAny;\n\t\torder: z.ZodNumber;\n\t\tanimate: z.ZodBoolean;\n\t} = {\n\t\torder: z.coerce\n\t\t\t.number()\n\t\t\t.min(0, { message: \"should be greater than or equal to 0\" })\n\t\t\t.max(maxOrder, { message: `should be less than or equal to ${maxOrder}` })\n\t\t\t.int({ message: \"Must be an Integer Value\" }),\n\t\tanimate: z.boolean(),\n\t};\n\tfor (const sym of symbols) zodOb[sym[0]] = z.coerce.number().finite();\n\n\treturn z.object(zodOb);\n}\n\nexport type formSchema = Required<z.infer<ReturnType<typeof schemaMaker>>>;\n\ninterface FormProps {\n\thandleSubmit: SubmitHandler<formSchema>;\n\tSVGReset: () => void;\n\tmaxOrder: number;\n\thandleSave: () => void;\n\tsymbols: [string, number][];\n}\n\nconst AttractorForm = forwardRef<HTMLParagraphElement, FormProps>(\n\t({ handleSubmit, SVGReset, handleSave, maxOrder, symbols }, ref) => {\n\t\tconst defaultValues: Required<{ [key: string]: unknown; order: number; animate: boolean }> = {\n\t\t\torder: maxOrder - 1,\n\t\t\tanimate: false,\n\t\t};\n\t\tfor (const sym of symbols) defaultValues[sym[0]] = sym[1];\n\t\tconst schema = schemaMaker(maxOrder, symbols);\n\t\tconst form = useForm<formSchema>({\n\t\t\tresolver: zodResolver(schema),\n\t\t\tdefaultValues,\n\t\t});\n\n\t\treturn (\n\t\t\t<Form {...form}>\n\t\t\t\t<form\n\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\tonSubmit={(evt) => void form.handleSubmit(handleSubmit)(evt)}\n\t\t\t\t\tonReset={() => {\n\t\t\t\t\t\tSVGReset();\n\t\t\t\t\t\tform.reset();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\t\tname=\"order\"\n\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t<FormItem>\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t<FormLabel className={cn(\"w-1/3 text-base\", \"lg:text-lg\")}>Depth</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<FormControl className=\"w-11\">\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"number\" className=\"h-6 p-2 text-center\" {...field} />\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<FormDescription>\n\t\t\t\t\t\t\t\t\t\tThe iterative depth for the fractal\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\tMust be between 0 and{` ${maxOrder}`}\n\t\t\t\t\t\t\t\t\t</FormDescription>\n\t\t\t\t\t\t\t\t\t<FormMessage />\n\t\t\t\t\t\t\t\t</FormItem>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{symbols.length > 0 && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Separator className={cn(\"my-2 bg-neutral-950\", \"dark:bg-neutral-50\")} />\n\t\t\t\t\t\t\t\t<div className={cn(\"text-xl\", \"lg:text-2xl\")}>Attractor Paramerters</div>\n\t\t\t\t\t\t\t\t<div className=\"grid grid-cols-2 gap-x-10 gap-y-2\">\n\t\t\t\t\t\t\t\t\t{symbols.map(([sym_name]) => (\n\t\t\t\t\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\t\t\t\t\tkey={sym_name}\n\t\t\t\t\t\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\t\t\t\t\t\tname={sym_name}\n\t\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<FormItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormLabel className={cn(\"w-1/3 text-base\", \"lg:text-lg\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sym_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl className=\"w-2/3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input type=\"number\" className=\"h-6 p-2 text-center\" {...field} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FormMessage />\n\t\t\t\t\t\t\t\t\t\t\t\t</FormItem>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p className=\"text-sm font-medium text-red-500 dark:text-red-900\" ref={ref}></p>\n\t\t\t\t\t\t\t\t<Separator className={cn(\"my-2 bg-neutral-950\", \"dark:bg-neutral-50\")} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\tcontrol={form.control}\n\t\t\t\t\t\t\tname=\"animate\"\n\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t<FormItem>\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t<FormLabel className={cn(\"w-1/3 text-base\", \"lg:text-lg\")}>Animate</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<FormControl>\n\t\t\t\t\t\t\t\t\t\t\t<Switch checked={field.value} onCheckedChange={field.onChange} />\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<FormDescription>Animate the rendition</FormDescription>\n\t\t\t\t\t\t\t\t</FormItem>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex w-full justify-between pt-4\">\n\t\t\t\t\t\t<Button type=\"submit\" className={cn(\"w-1/4 rounded-md\")}>\n\t\t\t\t\t\t\tDraw\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"reset\" className={cn(\"w-1/4 rounded-md\")}>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"button\" className={cn(\"w-1/4 rounded-md\")} onClick={handleSave} disabled>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Form>\n\t\t);\n\t}\n);\n\nAttractorForm.displayName = \"AttractorForm\";\n\nexport default AttractorForm;\n","import { useRef } from \"react\";\nimport { AttractorRenderer, cn } from \"@/lib/utils\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport AttractorForm, { formSchema } from \"@/components/AttractorForm\";\nimport AttractorRuleSet from \"@/lib/rules/Attractor\";\nimport SVGCanvas from \"@/components/SVGCanvas\";\n\nconst FillFrac = () => {\n\tconst { attrID } = useParams();\n\tconst SVGRef = useRef<SVGSVGElement>(null);\n\tconst formErrorRef = useRef<HTMLParagraphElement>(null);\n\n\tif (!(attrID! in AttractorRuleSet)) return <Navigate to=\"/geo-vis/404\" />;\n\n\tconst interval: { i?: NodeJS.Timeout } = { i: undefined };\n\n\tfunction SVGReset() {\n\t\tSVGRef.current!.innerHTML = \"\";\n\t\tclearInterval(interval.i);\n\t\tinterval.i = undefined;\n\t\tif (formErrorRef.current) formErrorRef.current.innerHTML = \"\";\n\t}\n\n\tfunction handleSubmit({ order, animate, ...data }: formSchema) {\n\t\tSVGReset();\n\t\ttry {\n\t\t\tAttractorRenderer(SVGRef.current!, {\n\t\t\t\torder,\n\t\t\t\tanimate,\n\t\t\t\tinterval,\n\t\t\t\tcolored: false,\n\t\t\t\tAttractorInfo: AttractorRuleSet[attrID!].rules(data),\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tSVGReset();\n\t\t\tif (formErrorRef.current)\n\t\t\t\tformErrorRef.current.innerHTML = \"Some Error has occured while calculating, try with different parameters\";\n\t\t}\n\t}\n\n\tfunction handleSave() {\n\t\t// console.log(SVGRef.current);\n\t}\n\n\treturn (\n\t\t<article className={cn(\"flex w-full flex-col gap-8 py-2\", \"lg:flex-row\")}>\n\t\t\t<div className={cn(\"flex w-full flex-col\", \"lg:w-1/3\")}>\n\t\t\t\t<h3 className={cn(\"pb-4 text-2xl underline\", \"lg:text-3xl\")}>{AttractorRuleSet[attrID!].name}</h3>\n\t\t\t\t<AttractorForm\n\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\tSVGReset={SVGReset}\n\t\t\t\t\tmaxOrder={AttractorRuleSet[attrID!].maxOrder}\n\t\t\t\t\thandleSave={handleSave}\n\t\t\t\t\tsymbols={AttractorRuleSet[attrID!].symbolNames}\n\t\t\t\t\tref={formErrorRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={cn(\"flex justify-center\", \"lg:w-2/3\")}>\n\t\t\t\t<div className={cn(\"aspect-square w-full rounded-xl bg-slate-200\", \"lg:w-[80vh]\")}>\n\t\t\t\t\t<SVGCanvas ref={SVGRef} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default FillFrac;\n"],"names":["AttractorRenderer","SVGRef","order","animate","AttractorInfo","interval","cap","scale","shift","or_qty","points","_","j","pointSvgs","parr","p","x","y","multiply","add","elm","createSVGCircleElement","i","origins","schemaMaker","maxOrder","symbols","zodOb","z","sym","AttractorForm","forwardRef","handleSubmit","SVGReset","handleSave","ref","defaultValues","schema","form","useForm","zodResolver","jsx","Form","jsxs","evt","FormField","field","FormItem","FormLabel","cn","FormControl","Input","FormDescription","FormMessage","Fragment","Separator","sym_name","Switch","Button","FillFrac","attrID","useParams","useRef","formErrorRef","AttractorRuleSet","Navigate","data","SVGCanvas"],"mappings":"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"}