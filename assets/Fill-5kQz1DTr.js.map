{"version":3,"file":"Fill-5kQz1DTr.js","sources":["../../src/assets/Thumbnails/fill/sierpinski-triangle.svg","../../src/assets/Thumbnails/fill/sierpinski-pentagon.svg","../../src/assets/Thumbnails/fill/sierpinski-hexagon.svg","../../src/assets/Thumbnails/fill/pentaflake.svg","../../src/assets/Thumbnails/fill/hexaflake.svg","../../src/assets/Thumbnails/fill/hexnut.svg","../../src/assets/Thumbnails/fill/hexpool.svg","../../src/assets/Thumbnails/fill/sierpinski-carpet.svg","../../src/assets/Thumbnails/fill/vicsek-fractal.svg","../../src/assets/Thumbnails/fill/vicsek-fractal-2.svg","../../src/lib/rules/Fill.ts"],"sourcesContent":["export default \"__VITE_ASSET__X0SBW2Fh__\"","export default \"__VITE_ASSET__R4iREAbN__\"","export default \"__VITE_ASSET__RR8wz1Yt__\"","export default \"__VITE_ASSET__4NFKtt18__\"","export default \"__VITE_ASSET__tHCUX_oq__\"","export default \"__VITE_ASSET__cy_itHIy__\"","export default \"__VITE_ASSET__qmMk9TlB__\"","export default \"__VITE_ASSET__YHASvRUp__\"","export default \"__VITE_ASSET__BA7EYxyV__\"","export default \"__VITE_ASSET__T3INL9on__\"","import {\n\thexaflake,\n\thexnut,\n\thexpool,\n\tpentaflake,\n\tsierpinskiCarpet,\n\tsierpinskiHexagon,\n\tsierpinskiPentagon,\n\tsierpinskiTriangle,\n\tvicsekFractal,\n\tvicsekFractal2,\n} from \"@/assets/Thumbnails/fill\";\nimport { FillFractalInfo, Point } from \"@/types\";\n\nimport { genCentersV, genCentersVC, genCentersVS, polyVGen } from \"@/lib/utils\";\n\nconst SierpinskiTriangleRules: FillFractalInfo = {\n\tname: \"Sierpinski Triangle\",\n\timage: sierpinskiTriangle,\n\tmaxOrder: 7,\n\trules: () => {\n\t\tconst sides = 3;\n\t\tconst ratio = 1 / 2;\n\t\tconst o_rad = 900 / Math.sin((2 * Math.PI) / 3);\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, sides, o_rad * Math.pow(ratio, d)),\n\t\t};\n\t},\n};\nconst SierpinskiPentagonRules: FillFractalInfo = {\n\tname: \"Sierpinski Pentagon\",\n\timage: sierpinskiPentagon,\n\tmaxOrder: 5,\n\trules: () => {\n\t\tconst sides = 5;\n\t\tconst ratio = 1 / (1 + 2 * Math.cos(Math.PI / sides));\n\t\tconst o_rad = 900 / Math.sin((2 * Math.PI) / sides);\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, sides, o_rad * Math.pow(ratio, d)),\n\t\t};\n\t},\n};\nconst SierpinskiHexagonRules: FillFractalInfo = {\n\tname: \"Sierpinski Hexagon\",\n\timage: sierpinskiHexagon,\n\tmaxOrder: 5,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, sides, o_rad * Math.pow(ratio, d)),\n\t\t};\n\t},\n};\nconst PentaFlakeRules: FillFractalInfo = {\n\tname: \"Pentaflake\",\n\timage: pentaflake,\n\tmaxOrder: 5,\n\trules: () => {\n\t\tconst sides = 5;\n\t\tconst ratio = 1 / (1 + 2 * Math.cos(Math.PI / sides));\n\t\tconst o_rad = 900 / Math.sin((2 * Math.PI) / sides);\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers: Point[], invCenters: Point[]) => {\n\t\t\t\tconst allCenters = genCentersVC(centers, invCenters, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allCenters;\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\nconst HexaFlakeRules: FillFractalInfo = {\n\tname: \"Hexaflake\",\n\timage: hexaflake,\n\tmaxOrder: 5,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, (o_rad * (1 - Math.cos(Math.PI / sides))) / 2],\n\t\t\trules: (centers: Point[], invCenters: Point[]) => {\n\t\t\t\tconst allCenters = genCentersVC(centers, invCenters, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allCenters;\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\nconst HexNutRules: FillFractalInfo = {\n\tname: \"Hex Nut\",\n\tmaxOrder: 5,\n\timage: hexnut,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio) * Math.cos(Math.PI / 6);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersV(centers, sides, i_rad, Math.PI / 6);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\n\nconst HexPoolRules: FillFractalInfo = {\n\tname: \"Hex Pool\",\n\tmaxOrder: 5,\n\timage: hexpool,\n\trules: () => {\n\t\tconst sides = 6;\n\t\tconst ratio = 1 / 3;\n\t\tconst o_rad = 900;\n\t\tlet i_rad = o_rad * (1 - ratio) * Math.cos(Math.PI / 6);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst allcenters = genCentersVC(centers, invCenters, sides, i_rad, Math.PI / 6);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allcenters;\n\t\t\t},\n\t\t\tpolyVGen: (d, flip) => (c: Point) => polyVGen(c, sides, o_rad * Math.pow(ratio, d), flip ? Math.PI : 0),\n\t\t};\n\t},\n};\n\nconst SierpinskiCarpetRules: FillFractalInfo = {\n\tname: \"Sierpinski Carpet\",\n\tmaxOrder: 5,\n\timage: sierpinskiCarpet,\n\trules: () => {\n\t\tconst o_rad = 900 * Math.sqrt(2);\n\t\tconst ratio = 1 / 3;\n\t\tconst sides = 4;\n\t\tconst i_rad: [number, number] = [o_rad * (1 - ratio), (o_rad * (1 - ratio)) / Math.sqrt(2)];\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, 4, o_rad * Math.pow(ratio, d), Math.PI / 4),\n\t\t\trules: (centers, invCenters) => {\n\t\t\t\tconst newCenters = genCentersVS(centers, sides, i_rad);\n\t\t\t\ti_rad[0] *= ratio;\n\t\t\t\ti_rad[1] *= ratio;\n\t\t\t\treturn [newCenters, invCenters];\n\t\t\t},\n\t\t};\n\t},\n};\n\nconst VicsekFractalRules: FillFractalInfo = {\n\tname: \"VicSek Fractal\",\n\tmaxOrder: 6,\n\timage: vicsekFractal,\n\trules: () => {\n\t\tconst o_rad = 900 * Math.sqrt(2);\n\t\tconst ratio = 1 / 3;\n\t\tconst sides = 4;\n\t\tlet i_rad = o_rad * (1 - ratio);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, 4, o_rad * Math.pow(ratio, d), Math.PI / 4),\n\t\t\trules: (centers, invCenter) => {\n\t\t\t\tconst allCenters = genCentersVC(centers, invCenter, sides, i_rad, Math.PI / 4);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allCenters;\n\t\t\t},\n\t\t};\n\t},\n};\n\nconst VicsekFractal2Rules: FillFractalInfo = {\n\tname: \"VicSek Fractal 2\",\n\tmaxOrder: 6,\n\timage: vicsekFractal2,\n\trules: () => {\n\t\tconst o_rad = 900 * Math.sqrt(2);\n\t\tconst ratio = 1 / 3;\n\t\tconst sides = 4;\n\t\tlet i_rad = (o_rad * (1 - ratio)) / Math.sqrt(2);\n\t\treturn {\n\t\t\torigin: [0, 0],\n\t\t\tpolyVGen: (d) => (c) => polyVGen(c, 4, o_rad * Math.pow(ratio, d), Math.PI / 4),\n\t\t\trules: (centers, invCenter) => {\n\t\t\t\tconst allCenters = genCentersVC(centers, invCenter, sides, i_rad);\n\t\t\t\ti_rad *= ratio;\n\t\t\t\treturn allCenters;\n\t\t\t},\n\t\t};\n\t},\n};\n\nconst FillFractalRuleSet: Record<string, FillFractalInfo> = {\n\t\"hex-nut\": HexNutRules,\n\t\"hex-pool\": HexPoolRules,\n\t\"hexa-flake\": HexaFlakeRules,\n\t\"penta-flake\": PentaFlakeRules,\n\t\"sierpinski-carpet\": SierpinskiCarpetRules,\n\t\"sierpinski-hexagon\": SierpinskiHexagonRules,\n\t\"sierpinski-pentagon\": SierpinskiPentagonRules,\n\t\"sierpinski-triangle\": SierpinskiTriangleRules,\n\t\"vicsek-fractal\": VicsekFractalRules,\n\t\"vicsek-fractal-2\": VicsekFractal2Rules,\n};\n\nexport default FillFractalRuleSet;\n"],"names":["sierpinskiTriangle","sierpinskiPentagon","sierpinskiHexagon","pentaflake","hexaflake","hexnut","hexpool","sierpinskiCarpet","vicsekFractal","vicsekFractal2","SierpinskiTriangleRules","o_rad","i_rad","centers","invCenters","newCenters","genCentersV","d","c","polyVGen","SierpinskiPentagonRules","ratio","SierpinskiHexagonRules","PentaFlakeRules","allCenters","genCentersVC","flip","HexaFlakeRules","HexNutRules","HexPoolRules","allcenters","SierpinskiCarpetRules","sides","genCentersVS","VicsekFractalRules","invCenter","VicsekFractal2Rules","FillFractalRuleSet"],"mappings":"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"}